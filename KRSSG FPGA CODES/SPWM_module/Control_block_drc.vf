////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Control_block_drc.vf
// /___/   /\     Timestamp : 02/28/2020 20:19:44
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: /opt/Xilinx/14.7/ISE_DS/ISE/bin/lin64/unwrapped/sch2hdl -intstyle ise -family spartan6 -verilog Control_block_drc.vf -w "/home/ise/ism_projects/xi share/KRSSG FPGA CODES/FPGA codes 2019/SPWM_module/Control_block.sch"
//Design Name: Control_block
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 100 ps / 10 ps

module FTP_HXILINX_Control_block(Q, C, PRE, T);
   
   output             Q;

   input 	      C;	
   input 	      PRE;	
   input              T;
   
   parameter INIT = 1'b1;
   reg                Q = INIT;

   always @(posedge C or posedge PRE)
     begin
	if (PRE)
	  Q <= 1'b1;
	else if(T)
          Q <= !Q;
     end
   
endmodule
`timescale 1ns / 1ps

module spwmmodule_MUSER_Control_block(angle, 
                                      i, 
                                      inclock, 
                                      tan, 
                                      pwm);

    input [19:0] angle;
    input [5:0] i;
    input inclock;
    input [19:0] tan;
   output pwm;
   
   wire inc;
   wire XLXN_1;
   wire [15:0] XLXN_4;
   wire [15:0] XLXN_5;
   
   scompare  XLXI_3 (.clk(inc), 
                    .swave(XLXN_5[15:6]), 
                    .twave(XLXN_4[15:6]), 
                    .pwm(pwm));
   trianglewave  XLXI_5 (.clk(inc), 
                        .outwave(XLXN_4[15:6]));
   (* HU_SET = "XLXI_6_0" *) 
   FTP_HXILINX_Control_block  XLXI_6 (.C(inclock), 
                                     .PRE(), 
                                     .T(XLXN_1), 
                                     .Q(inc));
   VCC  XLXI_7 (.P(XLXN_1));
   cordic  XLXI_8 (.A(i[5:0]), 
                  .angle(angle[19:0]), 
                  .atan_table(tan[19:0]), 
                  .clock(inc), 
                  .sine(XLXN_5[15:6]));
endmodule
`timescale 1ns / 1ps

module Control_block(clk, 
                     HALL, 
                     Q0, 
                     PHASE_A, 
                     PHASE_B, 
                     PHASE_C);

    input clk;
    input [2:0] HALL;
    input Q0;
   output PHASE_A;
   output PHASE_B;
   output PHASE_C;
   
   wire XLXN_14;
   wire XLXN_16;
   wire XLXN_18;
   wire [9:0] XLXN_28;
   wire [19:0] XLXN_67;
   wire [19:0] XLXN_68;
   wire [19:0] XLXN_69;
   wire [19:0] XLXN_70;
   wire [5:0] XLXN_71;
   wire [19:0] XLXN_72;
   wire [5:0] XLXN_74;
   wire [19:0] XLXN_75;
   wire [5:0] XLXN_76;
   
   spwmmodule_MUSER_Control_block  XLXI_1 (.angle(XLXN_68[19:0]), 
                                          .i(XLXN_74[5:0]), 
                                          .inclock(clk), 
                                          .tan(XLXN_72[19:0]), 
                                          .pwm(XLXN_16));
   spwmmodule_MUSER_Control_block  XLXI_2 (.angle(XLXN_69[19:0]), 
                                          .i(XLXN_76[5:0]), 
                                          .inclock(clk), 
                                          .tan(XLXN_75[19:0]), 
                                          .pwm(XLXN_18));
   spwmmodule_MUSER_Control_block  XLXI_3 (.angle(XLXN_67[19:0]), 
                                          .i(XLXN_71[5:0]), 
                                          .inclock(clk), 
                                          .tan(XLXN_70[19:0]), 
                                          .pwm(XLXN_14));
   NOR2  XLXI_4 (.I0(XLXN_14), 
                .I1(XLXN_14), 
                .O(PHASE_A));
   NOR2  XLXI_5 (.I0(XLXN_16), 
                .I1(XLXN_16), 
                .O(PHASE_B));
   NOR2  XLXI_6 (.I0(XLXN_18), 
                .I1(XLXN_18), 
                .O(PHASE_C));
   angle_check  XLXI_7 (.angle_in(XLXN_28[9:0]), 
                       .hall(HALL[2:0]), 
                       .sineangle_A(XLXN_67[19:0]), 
                       .sineangle_B(XLXN_68[19:0]), 
                       .sineangle_C(XLXN_69[19:0]));
   Encoder  XLXI_9 (.q0(Q0), 
                   .TICKS(XLXN_28[9:0]));
   TAN_DOC  XLXI_10 (.A(XLXN_76[5:0]), 
                    .B(XLXN_74[5:0]), 
                    .C(XLXN_71[5:0]), 
                    .atan_table_A(XLXN_75[19:0]), 
                    .atan_table_B(XLXN_72[19:0]), 
                    .atan_table_C(XLXN_70[19:0]));
endmodule
