////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : motorpackage.vf
// /___/   /\     Timestamp : 01/19/2019 05:29:20
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog "/home/ise/ism_projects/xi share/not my codes/fpga module/motorpackage.vf" -w "/home/ise/ism_projects/xi share/not my codes/fpga module/motorpackage.sch"
//Design Name: motorpackage
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module motormodule_MUSER_motorpackage(brake, 
                                      clk, 
                                      en, 
                                      hall, 
                                      qa, 
                                      qb, 
                                      setvalue, 
                                      encoder, 
                                      phase_a, 
                                      phase_b, 
                                      phase_c);

    input brake;
    input clk;
    input en;
    input [2:0] hall;
    input qa;
    input qb;
    input [7:0] setvalue;
   output [7:0] encoder;
   output [1:0] phase_a;
   output [1:0] phase_b;
   output [1:0] phase_c;
   
   wire [7:0] XLXN_3;
   wire XLXN_6;
   wire XLXN_7;
   wire [7:0] XLXN_15;
   wire XLXN_20;
   wire [7:0] XLXN_99;
   wire [7:0] encoder_DUMMY;
   
   assign encoder[7:0] = encoder_DUMMY[7:0];
   pid  XLXI_1 (.clk(clk), 
               .enc(encoder_DUMMY[7:0]), 
               .rst_n(en), 
               .set_val(XLXN_99[7:0]), 
               .Pwm(XLXN_3[7:0]));
   zerobit  XLXI_2 (.insignal(setvalue[7:0]), 
                   .outsignal(XLXN_99[7:0]));
   directionbit  XLXI_3 (.insignal1(setvalue[7:0]), 
                        .insignal2(XLXN_3[7:0]), 
                        .pwmout(XLXN_15[7:0]));
   pwm  XLXI_4 (.cl(), 
               .clk(XLXN_6), 
               .en1(en), 
               .lo(XLXN_15[7:0]), 
               .dir(XLXN_20), 
               .out1(XLXN_7));
   clock  XLXI_5 (.inc(clk), 
                 .outc(XLXN_6));
   gatedriver  XLXI_6 (.brake(brake), 
                      .d(XLXN_20), 
                      .h(hall[2:0]), 
                      .pwm(XLXN_7), 
                      .a(phase_a[1:0]), 
                      .b(phase_b[1:0]), 
                      .c(phase_c[1:0]));
   decoder  XLXI_7 (.clk(clk), 
                   .quadA(qa), 
                   .quadB(qb), 
                   .reset(en), 
                   .total(encoder_DUMMY[7:0]));
endmodule
`timescale 1ns / 1ps

module motorpackage(done, 
                    en, 
                    hall1, 
                    hall2, 
                    hall3, 
                    hall4, 
                    hall5, 
                    inc, 
                    q1a, 
                    q1b, 
                    q2a, 
                    q2b, 
                    q3a, 
                    q3b, 
                    q4a, 
                    q4b, 
                    rxin, 
                    a1, 
                    a2, 
                    a3, 
                    a4, 
                    a5, 
                    b1, 
                    b2, 
                    b3, 
                    b4, 
                    b5, 
                    charge, 
                    c1, 
                    c2, 
                    c3, 
                    c4, 
                    c5, 
                    led, 
                    led2, 
                    led3, 
                    led4, 
                    trigger, 
                    tx);

    input done;
    input en;
    input [2:0] hall1;
    input [2:0] hall2;
    input [2:0] hall3;
    input [2:0] hall4;
    input [2:0] hall5;
    input inc;
    input q1a;
    input q1b;
    input q2a;
    input q2b;
    input q3a;
    input q3b;
    input q4a;
    input q4b;
    input rxin;
   output [1:0] a1;
   output [1:0] a2;
   output [1:0] a3;
   output [1:0] a4;
   output [1:0] a5;
   output [1:0] b1;
   output [1:0] b2;
   output [1:0] b3;
   output [1:0] b4;
   output [1:0] b5;
   output charge;
   output [1:0] c1;
   output [1:0] c2;
   output [1:0] c3;
   output [1:0] c4;
   output [1:0] c5;
   output led;
   output led2;
   output led3;
   output led4;
   output trigger;
   output tx;
   
   wire XLXN_1;
   wire [7:0] XLXN_2;
   wire [7:0] XLXN_86;
   wire [7:0] XLXN_87;
   wire [7:0] XLXN_88;
   wire [7:0] XLXN_89;
   wire [7:0] XLXN_127;
   wire XLXN_128;
   wire XLXN_129;
   wire XLXN_130;
   wire XLXN_131;
   wire [7:0] XLXN_245;
   wire [7:0] XLXN_246;
   wire [7:0] XLXN_247;
   wire [7:0] XLXN_248;
   wire XLXN_251;
   wire led2_DUMMY;
   wire led_DUMMY;
   
   assign led = led_DUMMY;
   assign led2 = led2_DUMMY;
   UART_Receiver  XLXI_5 (.i_Clk(inc), 
                         .i_RX_Serial(rxin), 
                         .o_RX_Byte(XLXN_2[7:0]), 
                         .o_RX_DV(XLXN_1));
   motormodule_MUSER_motorpackage  XLXI_14 (.brake(XLXN_131), 
                                           .clk(inc), 
                                           .en(en), 
                                           .hall(hall4[2:0]), 
                                           .qa(q4a), 
                                           .qb(q4b), 
                                           .setvalue(XLXN_89[7:0]), 
                                           .encoder(XLXN_248[7:0]), 
                                           .phase_a(a4[1:0]), 
                                           .phase_b(b4[1:0]), 
                                           .phase_c(c4[1:0]));
   motormodule_MUSER_motorpackage  XLXI_15 (.brake(XLXN_130), 
                                           .clk(inc), 
                                           .en(en), 
                                           .hall(hall3[2:0]), 
                                           .qa(q3a), 
                                           .qb(q3b), 
                                           .setvalue(XLXN_88[7:0]), 
                                           .encoder(XLXN_247[7:0]), 
                                           .phase_a(a3[1:0]), 
                                           .phase_b(b3[1:0]), 
                                           .phase_c(c3[1:0]));
   motormodule_MUSER_motorpackage  XLXI_17 (.brake(XLXN_128), 
                                           .clk(inc), 
                                           .en(en), 
                                           .hall(hall2[2:0]), 
                                           .qa(q2a), 
                                           .qb(q2b), 
                                           .setvalue(XLXN_86[7:0]), 
                                           .encoder(XLXN_245[7:0]), 
                                           .phase_a(a2[1:0]), 
                                           .phase_b(b2[1:0]), 
                                           .phase_c(c2[1:0]));
   motormodule_MUSER_motorpackage  XLXI_18 (.brake(XLXN_129), 
                                           .clk(inc), 
                                           .en(en), 
                                           .hall(hall1[2:0]), 
                                           .qa(q1a), 
                                           .qb(q1b), 
                                           .setvalue(XLXN_87[7:0]), 
                                           .encoder(XLXN_246[7:0]), 
                                           .phase_a(a1[1:0]), 
                                           .phase_b(b1[1:0]), 
                                           .phase_c(c1[1:0]));
   kicker  XLXI_20 (.clk(inc), 
                   .done(done), 
                   .kickstart(led2_DUMMY), 
                   .kicktime(XLXN_127[7:0]), 
                   .Charge(charge), 
                   .led3(led3), 
                   .led4(led4), 
                   .Trigger(trigger));
   speed4  XLXI_22 (.clk(inc), 
                   .received(XLXN_1), 
                   .rst_n(en), 
                   .serial(XLXN_2[7:0]), 
                   .brake1(XLXN_128), 
                   .brake2(XLXN_129), 
                   .brake3(XLXN_130), 
                   .brake4(XLXN_131), 
                   .kickb(led2_DUMMY), 
                   .kicker(XLXN_127[7:0]), 
                   .Motor1(XLXN_86[7:0]), 
                   .Motor2(XLXN_87[7:0]), 
                   .Motor3(XLXN_88[7:0]), 
                   .Motor4(XLXN_89[7:0]));
   kickdribblerbit  XLXI_33 (.clk(inc), 
                            .inkick(XLXN_127[7:0]), 
                            .outdribbler(led_DUMMY));
   dribbler1  XLXI_36 (.clk(inc), 
                      .en(led_DUMMY), 
                      .h(hall5[2:0]), 
                      .a(a5[1:0]), 
                      .b(b5[1:0]), 
                      .c(c5[1:0]));
   Encoder_4_Motor_Transmitter  XLXI_37 (.CLK(inc), 
                                        .E1(XLXN_245[7:0]), 
                                        .E2(XLXN_246[7:0]), 
                                        .E3(XLXN_247[7:0]), 
                                        .E4(XLXN_248[7:0]), 
                                        .RST(XLXN_251), 
                                        .TX(tx));
   GND  XLXI_38 (.G(XLXN_251));
endmodule
